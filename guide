<!DOCTYPE html>
<html lang="en">
<head>
<title>SelimSql User Guide</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
<meta http-equiv="copyright" content="SelimSql 2009"/>
<meta name="author" content="Zülkif Güven"/>
<meta name="description" content="SelimSql database management system"/>
<meta name="email" content="selimsqldb@gmail.com"/>
<meta name="distribution" content="global"/>
<meta name="rating" content="General"/>
<meta name="resource-type" content="document"/>
<meta name="clientbase" content="global"/>
<meta name="audience" content="all"/>
<meta name="page-type" content="document"/>
<meta name="content-type" content="HTML"/>
<meta name="keywords" content="selimsql,jdbc,connection,driver,java,database,management,create,table,index,insert,record,update,delete,StrFromDate,DateFromStr,select,expression,group,order"/>

<link rel="shortcut icon" type="image/x-icon" href="images/favicon.png"/>

<link href="styles/w3.css" media="screen" rel="stylesheet" title="CSS" type="text/css"/>
<link href="styles/styleExtra.css" media="screen" rel="stylesheet" title="CSS" type="text/css"/>
</head>

<body>
<div class="w3-row my-light-teal">
  <div class="w3-col w3-container m1 w3-hide-small">
  </div>

  <div class="w3-col w3-container m10">
    <h1 class="my-font-family my-font-weight-bold">SelimSql</h1>
    <h3 class="my-font-family my-font-weight-bold">Database Management System</h3>
  </div>

  <div class="w3-col w3-container m1 w3-hide-small">
  </div>
</div>
  
<div class="w3-row w3-teal">
  <div class="w3-col w3-container m1 w3-hide-small">
  </div>

  <div class="w3-col m10 my-margin-top5px my-margin-bottom5px">
    <a href="index" class="w3-button w3-round-large w3-lime w3-hover-aqua w3-padding-small my-margin-left5px">Main Page</a>
    <a href="guide" class="w3-button w3-round-large w3-lime w3-hover-aqua w3-padding-small my-margin-left5px">User Guide</a>
    <a href="download" class="w3-button w3-round-large w3-lime w3-hover-aqua w3-padding-small my-margin-left5px">Download</a>
    <a href="java_code" class="w3-button w3-round-large w3-lime w3-hover-aqua w3-padding-small my-margin-left5px">Java Code</a>
    <a href="ssqldbadmin_android" class="w3-button w3-round-large w3-lime w3-hover-aqua w3-padding-small my-margin-left5px">Android</a>
    <a href="contact" class="w3-button w3-round-large w3-lime w3-hover-aqua w3-padding-small my-margin-left5px">Contact</a>
  </div>

  <div class="w3-col w3-container m1 w3-hide-small">
  </div>
</div>
  
<div class="w3-row">
  <div class="w3-col w3-container m1 w3-hide-small">
  </div>

  <div class="w3-col my-container m8">
   <a name="start"/></a>
   <h2>SelimSql Syntax</h2>
   <p>SelimSql jdbc connection driver supports the following data definition language(DDL), data manipulation language(DML) and query language statements.
   </p>

   <h3>Table Of Contents</h3>
   <a href="#jdbcDriver">Connection Driver Class And Url</a>
   <br/>
   <a href="#ddlStatements">Data Definition Statements</a>
   <font size="-1">
    <br/>&nbsp;&nbsp;-<a href="#createTable">Create Table</a>
    <br/>&nbsp;&nbsp;-<a href="#dropTable">Drop Table</a>
    <br/>&nbsp;&nbsp;-<a href="#createIndex">Create Index</a>
    <br/>&nbsp;&nbsp;-<a href="#dropIndex">Drop Index</a>
    <br/>&nbsp;&nbsp;-<a href="#renameTable">Rename Table</a>
    <br/>&nbsp;&nbsp;-<a href="#alterTable">Alter Table</a>

    <br/>&nbsp;&nbsp;-<a href="#createSequence">Create Sequence</a>
    <br/>&nbsp;&nbsp;-<a href="#dropSequence">Drop Sequence</a>

    <br/>&nbsp;&nbsp;-<a href="#createUser">Create User</a>
    <br/>&nbsp;&nbsp;-<a href="#alterUserPass">Alter User Pass</a>
    <br/>&nbsp;&nbsp;-<a href="#dropUser">Drop User</a>
    <br/>&nbsp;&nbsp;-<a href="#databaseGrants">Grant Database</a>
    <br/>&nbsp;&nbsp;-<a href="#databaseTableGrants">Grant Database Table</a>
   </font>
   <br/>
   <a href="#dmlStatements">Data Manipulation Statements</a>
   <font size="-1">
    <br/>&nbsp;&nbsp;-<a href="#insertStatement">Insert Record</a>
    <br/>&nbsp;&nbsp;-<a href="#updateStatement">Update Record</a>
    <br/>&nbsp;&nbsp;-<a href="#deleteStatement">Delete Record</a>
   </font>
   <br/>
   <a href="#selectStatement">Select Statement</a>
   <br/>
   <a href="#sqlFunctions">Sql Functions</a>
   <br/><br/>
   <br/>

   <a name="jdbcDriver"></a>
   <a name="jdbcUrl"></a>
   <h3>Connection Driver Class And Url</h3>

<pre class="lang-markup">
<table cellpadding="3" cellspacing="0" border="1">
  <tr>
   <td align='right'>Jdbc Driver Class</td>
   <td align='left'><b>selimsql.jdbc.DbDriver</b></td>
   <td align='left'>&nbsp;</td>
  </tr>
  <tr>
   <td align='center' valign='top'>Jdbc Url</td>
   <td align='left' valign='top'><b>jdbc:selimsql:<font size="-1">&lt;<i>DbTypeOrOperation</i>&gt;:&lt;<i>DbPathName</i>&gt;</font></b></td>
   <td align='left'><b>DbTypeOrOperation:</b>
-<u>file</u>: Connect to a file based database.

-<u>//ServerIp:ServerPort(9933)</u>:
Connect to host based database.

-<u>fileNewDatabase</u>: Create a new database.

-<u>fileDropDatabase</u>: Drop the database.

<b>DbPathName:</b>
Database location and name.
<br/><b>Example for connect:</b>
jdbc:selimsql:file:D:/SSqlData/Stok
jdbc:selimsql://192.168.2.3:9933/MyDb
<br/><b>Example for new database:</b>
jdbc:selimsql:fileNewDatabase:D:/SSqlData/MyDb
   </td>
  </tr>
 </table>
 </pre>


 <br/><br/>
 <a name="ddlStatements"></a>
 <h3>Data Definition Statements</h3>

 <a name="createTable"></a>
 <h4>-Create Table</h4>
<pre class="lang-sql">
 CREATE TABLE &lt;TableName&gt; ( &lt;ColumnDefinition&gt; [, ...])

 <b>ColumnDefinition:</b>
 &lt;ColumnName&gt; &lt;DataType&gt; [(&lt;ColumnSize&gt;[, &lt;Precision&gt;]) [NOT NULL]]

<table cellpadding="3" cellspacing="0" border="1">
<tr>
 <th align="left">DataType</th>
 <th align="left">Java Equivalent Type</th>
</tr>
<tr>
 <td>VARCHAR | CHAR | LONGCHAR</td>
 <td>java.lang.String</td>
</tr>
<tr>
 <td>BIGINT</td>
 <td>java.lang.Long</td>
</tr>
<tr>
 <td>INTEGER</td>
 <td>java.lang.Integer</td>
</tr>
<tr>
 <td>SMALLINT</td>
 <td>java.lang.Short</td>
</tr>
<tr>
 <td>BYTE</td>
 <td>java.lang.Byte</td>
</tr>
<tr>
 <td>DECIMAL | NUMBER | MONEY</td>
 <td>java.lang.Double | java.math.BigDecimal</td>
</tr>
<tr>
 <td>DATE</td>
 <td>java.sql.Date</td>
</tr>
<tr>
 <td>TIMESTAMP</td>
 <td>java.sql.Timestamp</td>
</tr>
<tr>
 <td>BLOB</td>
 <td>java.lang.byte[]</td>
</tr>
</table>

<b>Example:</b>
CREATE TABLE Product
(Id INTEGER NOT NULL,
 Name VARCHAR(20) NOT NULL,
 Description VARCHAR(50),
 Price DECIMAL(15, 2) NOT NULL,
 ProductDate DATE NOT NULL,
 Status CHAR NOT NULL,
 Comment LONGTEXT,
 Photo BLOB)
</pre>


<br/>
<a name="dropTable"></a>
<h4>-Drop Table</h4>
<pre class="lang-sql">
DROP TABLE &lt;TableName&gt;
</pre>


<br/>
<a name="createIndex"></a>
<h4>-Create Index</h4>
<pre class="lang-sql">
CREATE [UNIQUE] INDEX &lt;IndexName&gt; ON &lt;TableName&gt;(&lt;ColumnName&gt; [, ...])

<b>Example1:</b>
CREATE UNIQUE INDEX ProductPk ON Product(ProductId)

<b>Example2:</b>
CREATE INDEX ProductDateIdx ON Product(ProductDate, Status)
</pre>


<br/>
<a name="dropIndex"></a>
<h4>-Drop Index</h4>
<pre class="lang-sql">
DROP INDEX &lt;IndexName&gt;</pre>


<br/>
<a name="renameTable"></a>
<h4>-Rename Table</h4>
<pre class="lang-sql">
RENAME &lt;TableName&gt; TO &lt;NewTableName&gt;</pre>

<br/>
<a name="alterTable"></a>
<h4>-Alter Table</h4>
For now, altering the table structure is not supported.
<br/>
You can follow alternative method to alter table:

<br/>
<font size="-1">
a) <a href="#createTable">Create a new table</a> and <a href="#createIndex">index</a> like this:
</font>
<pre class="lang-sql">
CREATE TABLE YourNewTableName
(Id INTEGER NOT NULL,
 Column2 <type>,
 Column3 <type>,
 ...
 )

CREATE UNIQUE INDEX YourNewTableNamePk ON YourNewTableName(Id)
</pre>


<br/>
<font size="-1">
b) Move records from your old table:
</font>
<pre class="lang-sql">
insert into YourNewTable
select id, column2, column3, ... , 'NewData' as NewColumn from YourOldTable
</pre>


<br/>
<font size="-1">
c) Delete old table:
</font>
<pre class="lang-sql">
Drop table YourOldTable
</pre>


<br/>
<font size="-1">
d) Rename new table as old table:
</font>
<pre class="lang-sql">
Rename YourNewTable to YourOldTable
</pre>


<br/><br/>
<a name="createSequence"></a>
<h4>-Create Sequence</h4>
<pre class="lang-sql">
Create SEQUENCE &lt;SEQ_NAME&gt; [STARTVALUE 1] [MINVALUE 1] [MAXVALUE 9999999999999999999] [INCREMENT 1] [CYCLE]

Example:
Create SEQUENCE Seq_Order_Id;

<a href='#sequenceFunctions'>Look at other Sequence Functions</a>
</pre>



<br/><br/>
<a name="dropSequence"></a>
<h4>-Drop Sequence</h4>
<pre class="lang-sql">
Drop SEQUENCE &lt;SEQ_NAME&gt;

Example:
Drop SEQUENCE Seq_Order_Id;
</pre>


<br/><br/>
<a name="createUser"></a>
<h4>-Create User</h4>
<pre class="lang-sql">
CREATE USER &lt;UserName&gt; BY PASSWORD &lt;UserPassword&gt;</pre>

<br/>
<a name="alterUserPass"></a>
<h4>-Alter User Pass</h4>
<pre class="lang-sql">
ALTER USER &lt;UserName&gt; BY PASSWORD &lt;UserPassword&gt;</pre>

<br/>
<a name="dropUser"></a>
<h4>-Drop User</h4>
<pre class="lang-sql">DROP USER &lt;UserName&gt;</pre>



<br/>
<a name="databaseGrants"></a>
<h4>-Database Grants</h4>
<pre class="lang-sql">GRANT grant1[,grant2,..] TO &lt;UserName&gt;

<b>Database Grants:</b>
ALL, NONE, BUILDTABLE, DROPTABLE, RENAMETABLE, BUILDUSER, DROPUSER, ALTERUSER

<b>Example:</b>
GRANT ALL TO admin
</pre>


<br/>
<a name="databaseTableGrants"></a>
<h4>-Database Table Grants</h4>
<pre class="lang-sql">GRANT grant1[,grant2,..] ON &lt;TableName&gt; TO &lt;UserName&gt;

<b>Database Table Grants:</b>
ALL, NONE, ALTERTABLE, BUILDINDEX, DROPINDEX, SELECT, INSERT, UPDATE, DELETE

<b>Example:</b>
GRANT Select,Update,Insert ON Customer TO admin

</pre>




<br/><br/>
<a name="dmlStatements"></a>
<h3>Data Manipulation Statements</h3>
<br/>
<a name="insertStatement"></a>
<h4>-Insert Record</h4>
<pre class="lang-sql">INSERT INTO &lt;Table&gt;[(&lt;Column&gt; [,...] )]
{VALUES(&lt;Expression&gt; [,...]) | &lt;SelectStatement&gt;};

<b>Example1:</b>
INSERT INTO Product(ProductId, Name, Description, Price, ProductDate, Status)
VALUES(1, 'Product1', null, 12.35, Today(), 'A');

<b>Example2:</b>
INSERT INTO Product
VALUES(2, 'Product2', null, 23.68, Today(-1), 'P');

<b>Example3:</b>
INSERT INTO Product
select * from ProductOther where ProductId <= 10;
</pre>


<br/>
<a name="updateStatement"></a>
<h4>-Update Record</h4>
<pre class="lang-sql">UPDATE &lt;Table&gt; SET &lt;Column&gt; = &lt;Expression&gt; [, ...] [WHERE &lt;Expression&gt;];

<b>Example:</b>
UPDATE Product
SET Description = Name + ' Desc.',
    Price = Price * 0.95
WHERE Description IS NULL
</pre>


<br/>
<a name="deleteStatement"></a>
<h4>-Delete Record</h4>
<pre class="lang-sql">DELETE FROM &lt;Table&gt; [WHERE &lt;Expression&gt;]

<b>Example:</b>
DELETE FROM Product
WHERE Status = 'P'
</pre>



<br/><br/>
<a name="selectStatement"></a>
<h3>Select Statement</h3>
<pre class="lang-sql">SELECT { &lt;SelectExpression&gt; | &lt;Table&gt;.* | * } [, ...]
FROM &lt;TableList&gt;
[WHERE &lt;Expression&gt;]
[GROUP BY &lt;Expression&gt; [, ...]]
[ORDER BY &lt;OrderExpression&gt; [, ...]]

<b>Expression:</b>
&lt;Condition&gt; [{ OR | AND } &lt;Condition&gt;]

<b>Condition:</b>
{ &lt;Value&gt; [|| &lt;Value&gt;]
 | &lt;Value&gt; { = | < | <= | > | >= | <> | != } &lt;Value&gt;
 | &lt;Value&gt; IS [NOT] NULL
 | &lt;Value&gt; [NOT] LIKE &lt;Value&gt; }

<b>Value:</b>
[+ | -] { &lt;Term&gt; [{ + | - | * | / | || } &lt;Term&gt;]
 | ( &lt;Condition&gt; )
 | &lt;function&gt;([&lt;parameter&gt;] [,...])

<b>Term:</b>
{ 'string' | number | floatingpoint
 | [&lt;Table&gt;.]&lt;Column&gt; | TRUE | FALSE | NULL }


<b>Example1:</b>
select * from Product
where ProductId <= 2;

<table>
<td align=right>ProductId</td>
<td align=left>Name</td>
<td align=left>Description</td>
<td align=right>Price</td>
<td align=left>ProductDate</td>
<td align=left>Status</td>
</tr>

<tr><td align=right>=======</td>
<td align=left>======</td>
<td align=left>============</td>
<td align=right>======</td>
<td align=left>============</td>
<td align=left>====</td>
</tr>

<tr>
<td align=right>1</td>
<td align=left>Product1</td>
<td align=left>Product1 Desc.</td>
<td align=right>11,73</td>
<td align=left>07.11.2011</td>
<td align=left>A</td>
</tr>

<tr>
<td align=right>2</td>
<td align=left>Product2</td>
<td align=left>Product2 Desc.</td>
<td align=right>22,50</td>
<td align=left>08.11.2011</td>
<td align=left>P</td>
</tr>
</table>


<b>Example2:</b>
SELECT ProductDate, count(ProductId) AS Number
FROM Product
GROUP BY ProductDate
ORDER BY 1 DESC;


<b>Example3:</b>
select o.OrderId, o.OrderDate, p.Name as Product, o.OrderNumber, (o.OrderNumber * o.UnitPrice) as Price,
(c.Name + ' ' + c.Surname) as Customer
from Order o, Customer c, Product p
where o.OrderDate >= DateFromStr('01.06.2010','dd.MM.yyyy')
  and o.OrderDate <= DateFromStr('27.10.2011','dd.MM.yyyy')
  and c.CustomerId = o.CustomerId
  and p.ProductId = o.ProductId
order by 1, 2;
</pre>


<br/><br/>
<a name="sqlFunctions"></a>
<h3>Sql Functions</h3>
<pre class="lang-sql"><table cellpadding="3" cellspacing="0" border="1">
  <tr>
   <th align='left'>Function Name</th>
   <th align='left'>Function Parameters</th>
   <th align='left'>Decription</th>
  </tr>
  <tr>
   <td align='left' colspan='3'><b>Aggregate Functions</b></td>
  </tr>
  <tr>
   <td align='left'>Count</td>
   <td align='left'>Scanned column or object of count</td>
   <td align='left'>Aggregate function. Example: Count(Id)</td>
  </tr>
  <tr>
   <td align='left'>Sum</td>
   <td align='left'>Scanned column or object of sum</td>
   <td align='left'>Aggregate function. Example: Sum(Price)</td>
  </tr>
  <tr>
   <td align='left'>Min</td>
   <td align='left'>Scanned column or object of min</td>
   <td align='left'>Aggregate function. Example: Min(OrderDate)</td>
  </tr>
  <tr>
   <td align='left'>Max</td>
   <td align='left'>Scanned column or object of max</td>
   <td align='left'>Aggregate function. Example: Max(Number)</td>
  </tr>

  <tr>
   <td align='left' colspan='3'><b>Datetime Functions</b></td>
  </tr>

  <tr>
   <td align='left' valign='top'>Today, CurDate</td>
   <td align='left' valign='top'>Prm1 optional.<br/>Date or DifDay</td>
   <td align='left' valign='top'>Current or different date.
    <br/>Example1: <font size="-1">Today()</font>
Example2: <font size="-1">CurDate(); --<i>Today</i></font>
Example3: <font size="-1">CurDate(-1); --<i>Yesterday</i></font></td>
  </tr>
  <tr>
   <td align='left' valign='top'>CurDateTime</td>
   <td align='left' valign='top'>Prm1 optional.<br/>Date or DifDay</td>
   <td align='left' valign='top'>Current or different datetime.
    <br/>Example1: <font size="-1">CurDateTime()</font>
Example2: <font size="-1">CurDateTime(-1); --<i>Yesterday time</i></font>
Example3: <font size="-1">CurDateTime(ATimeStamp);
          --<i>ATimeStamp time by no milisecond</i></font></td>
  </tr>
  <tr>
   <td align='left' valign='top'>Now, CurDateTimeStamp</td>
   <td align='left' valign='top'>Prm1 optional.<br/>DifDay</td>
   <td align='left' valign='top'>Current or different datetime stamp.
    <br/>Example1: <font size="-1">Now()</font>
Example2: <font size="-1">CurDateTimeStamp(); --<i>Now</i></font>
Example3: <font size="-1">CurDateTimeStamp(-5/24); --<i>5 hour before</i></font></td>
  </tr>
  <tr>
   <td align='left'>Year, Month, Day,<br/>Hour, Minute, Second</td>
   <td align='left'>-</td>
   <td align='left' valign='top'>Current Year, Month, Day, Hour, Minute, Second
Example1: Year()
Example2: Hour()</td>
  </tr>
  <tr>
   <td align='left' valign='top'>WeekDay</td>
   <td align='left'>Prm1:Number,<br/>Prm2:Mod</td>
   <td align='left' valign='top'>Day of Week. 1:Monday, 2:Tuesday,.. 7:Sunday
Example: WeekDay()</td>
  </tr>
  <tr>
   <td align='left' valign='top'>DateFromStr</td>
   <td align='left' valign='top'>Prm1:DateStr,<br/>Prm2:DateFormat optional</td>
   <td align='left' valign='top'>Date from string
    <br/>Example:<font size="-1">
DateFromStr('01.06.2014 10:48:23','dd.MM.yyyy HH:mm:ss')</font></td>
  </tr>
  <tr>
   <td align='left' valign='top'>DateDifMonth</td>
   <td align='left'>Prm:DifMonth</td>
   <td align='left' valign='top'>Different month date. Example: DateDifMonth(-3)</td>
  </tr>
  <tr>
   <td align='left' valign='top'>StrFromDate</td>
   <td align='left' valign='top'>Prm1:Date,<br/>Prm2:DateFormat optional</td>
   <td align='left' valign='top'>String from date
    <br/>Example:
StrFromDate(ProductDate,'dd/MM/yyyy'),
StrFromDate(Now(-7),'yyyyMMdd HH:mm:ss')
   </td>
  </tr>
  <tr>
   <td align='left' valign='top'>StrFromNumber</td>
   <td align='left' valign='top'>Prm1:Number,<br/>Prm2:Format is optional</td>
   <td align='left' valign='top'>String from number
    <br/>Example:<font size="-1">
StrFromNumber(23419.2865, '#0.00'); --<i>Out: 23419.29</i>
StrFromNumber(23419.2865, '#,##0.00'); --<i>Out: 23,419.29</i></font></td>
  </tr>

  <tr>
   <td align='left' colspan='3'><b>Text Functions</b></td>
  </tr>
  <tr>
   <td align='left'>StrLen</td>
   <td align='left'>Prm:Text</td>
   <td align='left'>Length of text. Example: StrLen(Name)</td>
  </tr>
  <tr>
   <td align='left'>Trim</td>
   <td align='left'>Prm:Text</td>
   <td align='left'>Trim the text. Example: Trim(Description)</td>
  </tr>
  <tr>
   <td align='left' valign='top'>SubStr</td>
   <td align='left' valign='top'>Prm1:Text,<br/>Prm2:StartPos,<br/>Prm3:Length optional</td>
   <td align='left' valign='top'>Sub string from text.
    <br/>Example:
SubStr(DESCRIPTION, 1, 5)
   </td>
  </tr>
  <tr>
   <td align='left'>Upper</td>
   <td align='left'>Prm:Text</td>
   <td align='left'>Upper the text. Example: Upper(Surname)</td>
  </tr>
  <tr>
   <td align='left'>Lower</td>
   <td align='left'>Prm:Text</td>
   <td align='left'>Lower the text. Example: Lower(Address)</td>
  </tr>
  <tr>
   <td align='left' valign='top'>InStr</td>
   <td align='left'>Prm1:stSource,<br/>Prm2:stSource, stLook</td>
   <td align='left' valign='top'>InStr search the stLook in stSource</td>
  </tr>
  <tr>
   <td align='left' valign='top'>InStrSet</td>
   <td align='left' valign='top'>Prm1:stSourceSet,<br/>Prm2:stLook</td>
   <td align='left' valign='top'>InStrSet search the stLook in stSourceSet
    <br/>Example:
InStrSet('1,3,5,7-9,11', '8')
   </td>
  </tr>
  <tr>
   <td align='left' valign='top'>IsNull</td>
   <td align='left'>Prm1:Object,<br/>Prm2:NewValue</td>
   <td align='left' valign='top'>If Object is null, use NewValue.
Example: IsNull(Status, 1)</td>
  </tr>
  <tr>
   <td align='left' valign='top'>IfValue</td>
   <td align='left'>Prm1:leftValue,<br/>Prm2:condition,<br/>Prm3:rightValue,<br/>Prm4:thenValue,<br/>Prm5:elseValue</td>
   <td align='left' valign='top'>IfValue check the condition, get thenValue or elseValue
    <br/>Example:
IfValue(OperationType, '=', '+', 'INCOME', 'EXPENSE')
   </td>
  </tr>
  <tr>
   <td align='left' valign='top'>CaseValue</td>
   <td align='left'>Prm1:Value,<br/>Prm2:EqualValue1,<br/>Prm3:ThenValue1,<br/>[EqualValue2,ThenValue2,..]<br/>PrmN:OtherValue</td>
   <td align='left' valign='top'>CaseValue check the equal values
and get the then values or other value.
    <br/>Example:<font size="-1">
CaseValue(MaleFemale, 'M', 'Male', 'F', 'Female', 'Unknown')</font></td>
  </tr>

  <tr>
   <td align='left' colspan='3'><b>Various Functions</b></td>
  </tr>
  <tr>
   <td align='left' valign='top'>Mod</td>
   <td align='left'>Prm1:Number,<br/>Prm2:Mod</td>
   <td align='left' valign='top'>Mod of the number. Example: Mod(Id, 3)</td>
  </tr>
  <tr>
   <td align='left' valign='top'>Round</td>
   <td align='left'>Prm1:Number,<br/>Prm2:Precision is optional</td>
   <td align='left' valign='top'>Round the number.
    <br/>Example:<font size="-1">
Round(413.2865); --<i>413.29</i></font></td>
  </tr>
  <tr>
   <td align='left' valign='top'>Floor</td>
   <td align='left'>Prm1:Number,<br/>Prm2:Precision is optional</td>
   <td align='left' valign='top'>Floor the number.
    <br/>Example:<font size="-1">
Floor(413.2865, 3); --<i>413.286</i></font></td>
  </tr>

  <tr>
   <td align='left' valign='top'>BinaryFromFile</td>
   <td align='left' valign='top'>Prm:Url or FileName.

Note: FileName is valid
for local database.
   </td>
   <td align='left' valign='top'>Read the data bytes from file or url.
<br/>Example:<font size="-1">
update Product
set Photo = <br/>
BinaryFromFile('http://www.mysite.com/Note1.png')
where id = 1</font>
   </td>
  </tr>

  <tr>
   <td align='left' colspan='3'><a name="sequenceFunctions"></a><b>Sequence Functions</b></td>
  </tr>
  <tr>
   <td align='left' valign='top'>SequenceNextValue</td>
   <td align='left' valign='top'>Prm: SequenceName</td>
   <td align='left' valign='top'>Next Value of SequenceName.
Example1: Select SequenceNextValue(SequenceName)
            From _DB_Sequence
           Where SequenceName = 'SEQ_ORDER_ID';

Example2: Insert Into Order(Id, Desc)
          Values(SequenceNextValue('SEQ_ORDER_ID'), 'Desc1');</td>
  </tr>
  <tr>
   <td align='left' valign='top'>SequenceCurrentValue</td>
   <td align='left' valign='top'>Prm: SequenceName</td>
   <td align='left' valign='top'>Current Value of SequenceName.
Example: Select SequenceCurrentValue(SequenceName)
           From _DB_Sequence
          Where SequenceName = 'SEQ_ORDER_ID'</td>
  </tr>

  <tr>
   <td align='left' colspan='3'><b>DateTime Generated Number Functions</b></td>
  </tr>
  <tr>
   <td align='left' valign='top'>CurDateNumber</td>
   <td align='left' valign='top'>-</td>
   <td align='left' valign='top'>Current date number.
Example: CurDateNumber(); --<i>20150930</i></td>
  </tr>
  <tr>
   <td align='left' valign='top'>CurDateTimeNumber</td>
   <td align='left' valign='top'>-</td>
   <td align='left' valign='top'>Current date time number.
Example: CurDateTimeNumber(); --<i>20150930115213</i></td>
  </tr>
  <tr>
   <td align='left' valign='top'>CurTimeNumber</td>
   <td align='left' valign='top'>-</td>
   <td align='left' valign='top'>Current time number.
Example: CurTimeNumber(); --<i>115306</i></td>
  </tr>
  <tr>
   <td align='left' valign='top'>CurDateTimeStampNumber</td>
   <td align='left' valign='top'>-</td>
   <td align='left' valign='top'>Current date time stamp number.
Example: CurDateTimeStampNumber(); --<i>20151001141304673</i></td>
  </tr>
  <tr>
   <td align='left' valign='top'>CurTimeStampNumber</td>
   <td align='left' valign='top'>-</td>
   <td align='left' valign='top'>Current time stamp number.
Example: CurTimeStampNumber(); --<i>140330215</i></td>
  </tr>
  </table>
</pre>
  </div>

  <!--For ADS -->
  <div class="w3-col m2 w3-center">
   <!--Ex
   <div class="w3-red w3-margin-bottom" style="height:200px;">
    Ads1
   </div>
   <div class="w3-green w3-margin-bottom" style="height:200px;">
    Ads2
   </div>
   <div class="w3-blue w3-margin-bottom" style="height:200px;">
    Ads3
   </div>
   -->
  </div>

  <div class="w3-col w3-container m1 w3-hide-small">
  </div>
</div>

<div class="w3-row">
  <div class="w3-col w3-container m1 w3-hide-small">
  </div>

  <div class="w3-col w3-container m8 w3-teal">
    <p style="text-align:right;font-size:x-small;">Copyright &copy; 2009 - 2019 SelimSql</p>
  </div>

  <div class="w3-col w3-container m3 w3-hide-small">
  </div>
</div>

</body>
</html>